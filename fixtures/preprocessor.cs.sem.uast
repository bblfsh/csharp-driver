{ '@type': "csharp:CompilationUnit",
   '@role': [File, Module],
   '@pos': { '@type': "uast:Positions",
      start: { '@type': "uast:Position",
         offset: 121,
         line: 15,
         col: 1,
      },
      end: { '@type': "uast:Position",
         offset: 255,
         line: 20,
         col: 1,
      },
   },
   AttributeLists: [],
   EndOfFileToken: { '@type': "csharp:EndOfFileToken",
      '@role': [Incomplete, Noop],
      '@pos': { '@type': "uast:Positions",
         start: { '@type': "uast:Position",
            offset: 255,
            line: 20,
            col: 1,
         },
         end: { '@type': "uast:Position",
            offset: 255,
            line: 20,
            col: 1,
         },
      },
      IsMissing: false,
      Text: "",
      Value: "",
      ValueText: "",
   },
   Externs: [],
   IsMissing: false,
   IsStructuredTrivia: false,
   Members: [
      { '@type': "csharp:EndRegionDirectiveTrivia",
         '@role': [Block, Incomplete, Noop],
         '@pos': { '@type': "uast:Positions",
            start: { '@type': "uast:Position",
               offset: 138,
               line: 16,
               col: 1,
            },
            end: { '@type': "uast:Position",
               offset: 148,
               line: 16,
               col: 11,
            },
         },
         IsDirective: true,
      },
      { '@type': "csharp:PragmaWarningDirectiveTrivia",
         '@role': [Incomplete, Noop],
         '@pos': { '@type': "uast:Positions",
            start: { '@type': "uast:Position",
               offset: 150,
               line: 18,
               col: 1,
            },
            end: { '@type': "uast:Position",
               offset: 171,
               line: 18,
               col: 22,
            },
         },
         IsDirective: true,
      },
      { '@type': "csharp:PragmaChecksumDirectiveTrivia",
         '@role': [Incomplete, Noop],
         '@pos': { '@type': "uast:Positions",
            start: { '@type': "uast:Position",
               offset: 172,
               line: 19,
               col: 1,
            },
            end: { '@type': "uast:Position",
               offset: 254,
               line: 19,
               col: 83,
            },
         },
         IsDirective: true,
      },
      { '@type': "csharp:FieldDeclaration",
         '@role': [Declaration, Type, Variable],
         '@pos': { '@type': "uast:Positions",
            start: { '@type': "uast:Position",
               offset: 121,
               line: 15,
               col: 1,
            },
            end: { '@type': "uast:Position",
               offset: 137,
               line: 15,
               col: 17,
            },
         },
         AttributeLists: [],
         Declaration: { '@type': "csharp:VariableDeclaration",
            '@role': [Declaration, Expression, Variable],
            '@pos': { '@type': "uast:Positions",
               start: { '@type': "uast:Position",
                  offset: 127,
                  line: 15,
                  col: 7,
               },
               end: { '@type': "uast:Position",
                  offset: 136,
                  line: 15,
                  col: 16,
               },
            },
            IsMissing: false,
            IsStructuredTrivia: false,
            Type: { '@type': "csharp:PredefinedType",
               '@role': [Incomplete, Primitive, Type],
               '@pos': { '@type': "uast:Positions",
                  start: { '@type': "uast:Position",
                     offset: 127,
                     line: 15,
                     col: 7,
                  },
                  end: { '@type': "uast:Position",
                     offset: 130,
                     line: 15,
                     col: 10,
                  },
               },
               IsMissing: false,
               IsStructuredTrivia: false,
               IsUnmanaged: false,
               IsVar: false,
               Keyword: { '@type': "csharp:IntKeyword",
                  '@token': "int",
                  '@role': [Declaration, Number],
                  '@pos': { '@type': "uast:Positions",
                     start: { '@type': "uast:Position",
                        offset: 127,
                        line: 15,
                        col: 7,
                     },
                     end: { '@type': "uast:Position",
                        offset: 130,
                        line: 15,
                        col: 10,
                     },
                  },
                  IsMissing: false,
                  Text: "int",
                  ValueText: "int",
               },
            },
            Variables: [
               { '@type': "csharp:VariableDeclarator",
                  '@role': [Declaration, Right, Variable],
                  '@pos': { '@type': "uast:Positions",
                     start: { '@type': "uast:Position",
                        offset: 131,
                        line: 15,
                        col: 11,
                     },
                     end: { '@type': "uast:Position",
                        offset: 136,
                        line: 15,
                        col: 16,
                     },
                  },
                  ArgumentList: ~,
                  Identifier: { '@type': "uast:Identifier",
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 131,
                           line: 15,
                           col: 11,
                        },
                        end: { '@type': "uast:Position",
                           offset: 132,
                           line: 15,
                           col: 12,
                        },
                     },
                     Name: "a",
                  },
                  Initializer: { '@type': "csharp:EqualsValueClause",
                     '@role': [Assignment, Right],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 133,
                           line: 15,
                           col: 13,
                        },
                        end: { '@type': "uast:Position",
                           offset: 136,
                           line: 15,
                           col: 16,
                        },
                     },
                     EqualsToken: { '@type': "csharp:EqualsToken",
                        '@role': [Equal, Operator],
                        '@pos': { '@type': "uast:Positions",
                           start: { '@type': "uast:Position",
                              offset: 133,
                              line: 15,
                              col: 13,
                           },
                           end: { '@type': "uast:Position",
                              offset: 134,
                              line: 15,
                              col: 14,
                           },
                        },
                        IsMissing: false,
                        Text: "=",
                        Value: "=",
                        ValueText: "=",
                     },
                     IsMissing: false,
                     IsStructuredTrivia: false,
                     Value: { '@type': "csharp:NumericLiteralExpression",
                        '@role': [Expression, Literal, Number],
                        '@pos': { '@type': "uast:Positions",
                           start: { '@type': "uast:Position",
                              offset: 135,
                              line: 15,
                              col: 15,
                           },
                           end: { '@type': "uast:Position",
                              offset: 136,
                              line: 15,
                              col: 16,
                           },
                        },
                        IsMissing: false,
                        IsStructuredTrivia: false,
                        Token: { '@type': "csharp:NumericLiteralToken",
                           '@role': [Literal, Number, Value],
                           '@pos': { '@type': "uast:Positions",
                              start: { '@type': "uast:Position",
                                 offset: 135,
                                 line: 15,
                                 col: 15,
                              },
                              end: { '@type': "uast:Position",
                                 offset: 136,
                                 line: 15,
                                 col: 16,
                              },
                           },
                           IsMissing: false,
                           Text: "1",
                           Value: 1,
                           ValueText: "1",
                        },
                     },
                  },
                  IsMissing: false,
                  IsStructuredTrivia: false,
               },
            ],
         },
         IsMissing: false,
         IsStructuredTrivia: false,
         Modifiers: [
            { '@type': "uast:Group",
               '@pos': { '@type': "uast:Positions",
               },
               Nodes: [
                  { '@type': "csharp:IfDirectiveTrivia",
                     '@role': [Block, If, Incomplete],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 0,
                           line: 1,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 9,
                           line: 1,
                           col: 10,
                        },
                     },
                     IsDirective: true,
                  },
                  { '@type': "csharp:DefineDirectiveTrivia",
                     '@role': [Declaration, Incomplete, Value],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 10,
                           line: 2,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 21,
                           line: 2,
                           col: 12,
                        },
                     },
                     IsDirective: true,
                  },
                  { '@type': "csharp:DisabledTextTrivia",
                     '@role': [Incomplete, Noop],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 22,
                           line: 3,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 23,
                           line: 4,
                           col: 1,
                        },
                     },
                     IsDirective: false,
                  },
                  { '@type': "csharp:ElifDirectiveTrivia",
                     '@role': [Block, Else, If, Incomplete],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 23,
                           line: 4,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 32,
                           line: 4,
                           col: 10,
                        },
                     },
                     IsDirective: true,
                  },
                  { '@type': "csharp:UndefDirectiveTrivia",
                     '@role': [Declaration, Incomplete, Value],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 33,
                           line: 5,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 43,
                           line: 5,
                           col: 11,
                        },
                     },
                     IsDirective: true,
                  },
                  { '@type': "csharp:DisabledTextTrivia",
                     '@role': [Incomplete, Noop],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 44,
                           line: 6,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 45,
                           line: 7,
                           col: 1,
                        },
                     },
                     IsDirective: false,
                  },
                  { '@type': "csharp:ElseDirectiveTrivia",
                     '@role': [Block, Else, Incomplete],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 45,
                           line: 7,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 50,
                           line: 7,
                           col: 6,
                        },
                     },
                     IsDirective: true,
                  },
                  { '@type': "csharp:LineDirectiveTrivia",
                     '@role': [Incomplete, Noop],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 51,
                           line: 8,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 56,
                           line: 8,
                           col: 6,
                        },
                     },
                     IsDirective: true,
                  },
                  { '@type': "csharp:WarningDirectiveTrivia",
                     '@role': [Incomplete, Noop],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 57,
                           line: 9,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 75,
                           line: 9,
                           col: 19,
                        },
                     },
                     IsDirective: true,
                  },
                  { '@type': "csharp:EndIfDirectiveTrivia",
                     '@role': [Block, If, Incomplete, Noop],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 76,
                           line: 10,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 82,
                           line: 10,
                           col: 7,
                        },
                     },
                     IsDirective: true,
                  },
                  { '@type': "csharp:ErrorDirectiveTrivia",
                     '@role': [Incomplete, Noop],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 84,
                           line: 12,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 100,
                           line: 12,
                           col: 17,
                        },
                     },
                     IsDirective: true,
                  },
                  { '@type': "csharp:RegionDirectiveTrivia",
                     '@role': [Block, Incomplete],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 102,
                           line: 14,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 120,
                           line: 14,
                           col: 19,
                        },
                     },
                     IsDirective: true,
                  },
                  { '@type': "csharp:ConstKeyword",
                     '@token': "const",
                     '@role': [Declaration, Incomplete],
                     '@pos': { '@type': "uast:Positions",
                        start: { '@type': "uast:Position",
                           offset: 121,
                           line: 15,
                           col: 1,
                        },
                        end: { '@type': "uast:Position",
                           offset: 126,
                           line: 15,
                           col: 6,
                        },
                     },
                     IsMissing: false,
                     Text: "const",
                     ValueText: "const",
                  },
               ],
            },
         ],
         SemicolonToken: { '@type': "csharp:SemicolonToken",
            '@role': [Incomplete],
            '@pos': { '@type': "uast:Positions",
               start: { '@type': "uast:Position",
                  offset: 136,
                  line: 15,
                  col: 16,
               },
               end: { '@type': "uast:Position",
                  offset: 137,
                  line: 15,
                  col: 17,
               },
            },
            IsMissing: false,
            Text: ";",
            Value: ";",
            ValueText: ";",
         },
      },
   ],
   Parent: ~,
   Usings: [],
}